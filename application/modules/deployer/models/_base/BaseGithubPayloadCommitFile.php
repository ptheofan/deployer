<?php

/**
 * This is the model base class for the table "github_payload_commit_file".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "GithubPayloadCommitFile".
 *
 * Columns in table "github_payload_commit_file" available as properties of the model,
 * followed by relations of table "github_payload_commit_file" available as properties of the model.
 *
 * @property string $id_github_payload_commit_file
 * @property string $fk_github_payload_commit
 * @property string $filename
 * @property string $action
 *
 * @property GithubPayloadCommit $fkGithubPayloadCommit
 */
abstract class BaseGithubPayloadCommitFile extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'github_payload_commit_file';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'GithubPayloadCommitFile|GithubPayloadCommitFiles', $n);
	}

	public static function representingColumn() {
		return 'filename';
	}

	public function rules() {
		return array(
			array('fk_github_payload_commit', 'required'),
			array('fk_github_payload_commit', 'length', 'max'=>11),
			array('filename', 'length', 'max'=>255),
			array('action', 'length', 'max'=>8),
			array('filename, action', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_github_payload_commit_file, fk_github_payload_commit, filename, action', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'fkGithubPayloadCommit' => array(self::BELONGS_TO, 'GithubPayloadCommit', 'fk_github_payload_commit'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_github_payload_commit_file' => Yii::t('app', 'Id Github Payload Commit File'),
			'fk_github_payload_commit' => null,
			'filename' => Yii::t('app', 'Filename'),
			'action' => Yii::t('app', 'Action'),
			'fkGithubPayloadCommit' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_github_payload_commit_file', $this->id_github_payload_commit_file, true);
		$criteria->compare('fk_github_payload_commit', $this->fk_github_payload_commit);
		$criteria->compare('filename', $this->filename, true);
		$criteria->compare('action', $this->action, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}