<?php

/**
 * This is the model base class for the table "github_user".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "GithubUser".
 *
 * Columns in table "github_user" available as properties of the model,
 * followed by relations of table "github_user" available as properties of the model.
 *
 * @property string $id_github_payload_user
 * @property string $email
 * @property string $name
 * @property string $username
 *
 * @property GithubPayload[] $githubPayloads
 * @property GithubRepository[] $githubRepositories
 */
abstract class BaseGithubUser extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'github_user';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'GithubUser|GithubUsers', $n);
	}

	public static function representingColumn() {
		return 'email';
	}

	public function rules() {
		return array(
			array('email, name, username', 'length', 'max'=>255),
			array('email, name, username', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_github_payload_user, email, name, username', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'githubPayloads' => array(self::HAS_MANY, 'GithubPayload', 'fk_github_payload_user_pusher'),
			'githubRepositories' => array(self::HAS_MANY, 'GithubRepository', 'fk_github_user'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_github_payload_user' => Yii::t('app', 'Id Github Payload User'),
			'email' => Yii::t('app', 'Email'),
			'name' => Yii::t('app', 'Name'),
			'username' => Yii::t('app', 'Username'),
			'githubPayloads' => null,
			'githubRepositories' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_github_payload_user', $this->id_github_payload_user, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('username', $this->username, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}