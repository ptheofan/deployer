<?php

/**
 * This is the model base class for the table "github_payload_commit".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "GithubPayloadCommit".
 *
 * Columns in table "github_payload_commit" available as properties of the model,
 * followed by relations of table "github_payload_commit" available as properties of the model.
 *
 * @property string $id_github_payload_commit
 * @property string $fk_github_payload
 * @property string $commit_id
 * @property integer $distinct
 * @property string $message
 * @property string $timestamp
 * @property string $url
 * @property integer $head_commit
 *
 * @property GithubPayload $fkGithubPayload
 * @property GithubPayloadCommitFile[] $githubPayloadCommitFiles
 */
abstract class BaseGithubPayloadCommit extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'github_payload_commit';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'GithubPayloadCommit|GithubPayloadCommits', $n);
	}

	public static function representingColumn() {
		return 'commit_id';
	}

	public function rules() {
		return array(
			array('fk_github_payload', 'required'),
			array('distinct, head_commit', 'numerical', 'integerOnly'=>true),
			array('fk_github_payload', 'length', 'max'=>11),
			array('commit_id, message, url', 'length', 'max'=>255),
			array('timestamp', 'safe'),
			array('commit_id, distinct, message, timestamp, url, head_commit', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_github_payload_commit, fk_github_payload, commit_id, distinct, message, timestamp, url, head_commit', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'fkGithubPayload' => array(self::BELONGS_TO, 'GithubPayload', 'fk_github_payload'),
			'githubPayloadCommitFiles' => array(self::HAS_MANY, 'GithubPayloadCommitFile', 'fk_github_payload_commit'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_github_payload_commit' => Yii::t('app', 'Id Github Payload Commit'),
			'fk_github_payload' => null,
			'commit_id' => Yii::t('app', 'Commit'),
			'distinct' => Yii::t('app', 'Distinct'),
			'message' => Yii::t('app', 'Message'),
			'timestamp' => Yii::t('app', 'Timestamp'),
			'url' => Yii::t('app', 'Url'),
			'head_commit' => Yii::t('app', 'Head Commit'),
			'fkGithubPayload' => null,
			'githubPayloadCommitFiles' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_github_payload_commit', $this->id_github_payload_commit, true);
		$criteria->compare('fk_github_payload', $this->fk_github_payload);
		$criteria->compare('commit_id', $this->commit_id, true);
		$criteria->compare('distinct', $this->distinct);
		$criteria->compare('message', $this->message, true);
		$criteria->compare('timestamp', $this->timestamp, true);
		$criteria->compare('url', $this->url, true);
		$criteria->compare('head_commit', $this->head_commit);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}